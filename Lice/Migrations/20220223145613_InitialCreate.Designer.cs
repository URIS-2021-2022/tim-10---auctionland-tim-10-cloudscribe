// <auto-generated />
using System;
using Lice.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lice.Migrations
{
    [DbContext(typeof(LiceContext))]
    [Migration("20220223145613_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lice.Entities.LiceEntity", b =>
                {
                    b.Property<Guid>("liceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brojRacuna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brojTelefona1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brojTelefona2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("prioritetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("liceId");

                    b.HasIndex("prioritetId");

                    b.ToTable("Lica");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LiceEntity");
                });

            modelBuilder.Entity("Lice.Entities.Prioritet.PrioritetEntity", b =>
                {
                    b.Property<Guid>("prioritetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("opisPrioriteta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("prioritetId");

                    b.ToTable("Prioriteti");

                    b.HasData(
                        new
                        {
                            prioritetId = new Guid("26797103-3a18-4750-9f27-33416e6e30d4"),
                            opisPrioriteta = "Vlasnik sistema za navodnjavanje"
                        },
                        new
                        {
                            prioritetId = new Guid("00cdf29d-e0d0-4207-87b2-16486eda55ab"),
                            opisPrioriteta = ". Vlasnik zemljišta koje se graniči sa zemljištem koje se daje u zakup"
                        },
                        new
                        {
                            prioritetId = new Guid("08062c01-9bfd-4c85-8501-f5ab8c026f2a"),
                            opisPrioriteta = "Poljoprivrednik koji je upisan u Registar"
                        },
                        new
                        {
                            prioritetId = new Guid("7c9752fc-86a9-41e6-b4b8-c22b1c9a6ab9"),
                            opisPrioriteta = "Vlasnik zemljišta koje je najbliže zemljištu koje se daje u zakup"
                        });
                });

            modelBuilder.Entity("Lice.Entities.FizickoLiceEntity", b =>
                {
                    b.HasBaseType("Lice.Entities.LiceEntity");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("FizickoLiceEntity");

                    b.HasData(
                        new
                        {
                            liceId = new Guid("65f1a8da-433f-42d1-82f6-6b771ddde854"),
                            brojRacuna = "80045875687",
                            brojTelefona1 = "062586654",
                            brojTelefona2 = "061582236",
                            email = "mmarkovic@gmail.com",
                            prioritetId = new Guid("26797103-3a18-4750-9f27-33416e6e30d4"),
                            JMBG = "2506995745621",
                            ime = "Marko",
                            prezime = "Marković"
                        },
                        new
                        {
                            liceId = new Guid("8bb61e16-0c5c-4ea1-8e2b-9c48719c7aab"),
                            brojRacuna = "8008465687",
                            brojTelefona1 = "0665826695",
                            brojTelefona2 = "0656258965",
                            email = "nnikolic@gmail.com",
                            prioritetId = new Guid("26797103-3a18-4750-9f27-33416e6e30d4"),
                            JMBG = "1407994556214",
                            ime = "Nikola",
                            prezime = "Nikolić"
                        });
                });

            modelBuilder.Entity("Lice.Entities.PravnoLiceEntity", b =>
                {
                    b.HasBaseType("Lice.Entities.LiceEntity");

                    b.Property<int>("faks")
                        .HasColumnType("int");

                    b.Property<string>("maticniBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PravnoLiceEntity");

                    b.HasData(
                        new
                        {
                            liceId = new Guid("529351b3-2c8c-41c6-abba-aa5feb564d06"),
                            brojRacuna = "800458757",
                            brojTelefona1 = "0695784105",
                            brojTelefona2 = "0625486214",
                            email = "masterplast@gmail.com",
                            prioritetId = new Guid("26797103-3a18-4750-9f27-33416e6e30d4"),
                            faks = 24601785,
                            maticniBroj = "25485674",
                            naziv = "Masterplast"
                        },
                        new
                        {
                            liceId = new Guid("d05f182d-7ef0-484b-9045-3f0451605cdb"),
                            brojRacuna = "8004574587",
                            brojTelefona1 = "0645289956",
                            brojTelefona2 = "0625482685",
                            email = "pannonglobal@gmail.com",
                            prioritetId = new Guid("26797103-3a18-4750-9f27-33416e6e30d4"),
                            faks = 24601785,
                            maticniBroj = "75486254",
                            naziv = "Pannonglobal"
                        });
                });

            modelBuilder.Entity("Lice.Entities.LiceEntity", b =>
                {
                    b.HasOne("Lice.Entities.Prioritet.PrioritetEntity", "Prioritet")
                        .WithMany()
                        .HasForeignKey("prioritetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prioritet");
                });
#pragma warning restore 612, 618
        }
    }
}
