// <auto-generated />
using System;
using JavnoNadmetanje.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JavnoNadmetanje.Migrations
{
    [DbContext(typeof(JavnoNadmetanjeContext))]
    partial class JavnoNadmetanjeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JavnoNadmetanje.Entities.EtapaEntity", b =>
                {
                    b.Property<Guid>("etapaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("brojEtape")
                        .HasColumnType("int");

                    b.HasKey("etapaID");

                    b.ToTable("Etapa");

                    b.HasData(
                        new
                        {
                            etapaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e968b"),
                            brojEtape = 1
                        },
                        new
                        {
                            etapaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5873e968b"),
                            brojEtape = 2
                        });
                });

            modelBuilder.Entity("JavnoNadmetanje.Entities.JavnoNadmetanjeEntity", b =>
                {
                    b.Property<Guid>("javnoNadmetanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("brojUcesnika")
                        .HasColumnType("int");

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("dopunaDepozita")
                        .HasColumnType("int");

                    b.Property<Guid>("etapaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("izlicitiranaCena")
                        .HasColumnType("int");

                    b.Property<bool>("izuzeto")
                        .HasColumnType("bit");

                    b.Property<string>("katastarskaOpstina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("krug")
                        .HasColumnType("int");

                    b.Property<int>("periodZakupa")
                        .HasColumnType("int");

                    b.Property<int>("pocetnaCena")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tip")
                        .HasColumnType("int");

                    b.Property<DateTime>("vremeKraja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("vremePocetka")
                        .HasColumnType("datetime2");

                    b.HasKey("javnoNadmetanjeID");

                    b.HasIndex("etapaID");

                    b.ToTable("JavnoNadmetanje");

                    b.HasDiscriminator<string>("Discriminator").HasValue("JavnoNadmetanjeEntity");
                });

            modelBuilder.Entity("JavnoNadmetanje.Entities.KorakCeneEntity", b =>
                {
                    b.Property<Guid>("korakCeneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("brojKoraka")
                        .HasColumnType("int");

                    b.HasKey("korakCeneID");

                    b.ToTable("KorakCene");

                    b.HasData(
                        new
                        {
                            korakCeneID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e961b"),
                            brojKoraka = 1
                        },
                        new
                        {
                            korakCeneID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e938b"),
                            brojKoraka = 2
                        });
                });

            modelBuilder.Entity("JavnoNadmetanje.Entities.JZOPEntity", b =>
                {
                    b.HasBaseType("JavnoNadmetanje.Entities.JavnoNadmetanjeEntity");

                    b.Property<int>("brojJZOP")
                        .HasColumnType("int");

                    b.Property<string>("opisJZOP")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("JZOPEntity");

                    b.HasData(
                        new
                        {
                            javnoNadmetanjeID = new Guid("6a411c13-a195-48f7-8dbd-67596c3573c0"),
                            brojUcesnika = 15,
                            datum = new DateTime(2021, 6, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dopunaDepozita = 5000,
                            etapaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e968b"),
                            izlicitiranaCena = 205000,
                            izuzeto = false,
                            katastarskaOpstina = "Novi Grad",
                            krug = 1,
                            periodZakupa = 5,
                            pocetnaCena = 55000,
                            status = "Prvi krug",
                            tip = 1,
                            vremeKraja = new DateTime(2021, 6, 11, 13, 59, 0, 0, DateTimeKind.Unspecified),
                            vremePocetka = new DateTime(2021, 6, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            brojJZOP = 2,
                            opisJZOP = "Drugi tip javnog nadmetanja"
                        },
                        new
                        {
                            javnoNadmetanjeID = new Guid("6a411c13-a195-48f7-8dbd-67596c4973c0"),
                            brojUcesnika = 45,
                            datum = new DateTime(2021, 6, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dopunaDepozita = 5000,
                            etapaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5873e968b"),
                            izlicitiranaCena = 205000,
                            izuzeto = false,
                            katastarskaOpstina = "Novi Grad",
                            krug = 1,
                            periodZakupa = 5,
                            pocetnaCena = 55000,
                            status = "Prvi krug",
                            tip = 1,
                            vremeKraja = new DateTime(2021, 6, 11, 13, 59, 0, 0, DateTimeKind.Unspecified),
                            vremePocetka = new DateTime(2021, 6, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            brojJZOP = 2,
                            opisJZOP = "Drugi tip javnog nadmetanja"
                        });
                });

            modelBuilder.Entity("JavnoNadmetanje.Entities.JavnaLicitacijaEntity", b =>
                {
                    b.HasBaseType("JavnoNadmetanje.Entities.JavnoNadmetanjeEntity");

                    b.Property<int>("brojJavneLicitacije")
                        .HasColumnType("int");

                    b.Property<Guid>("korakCeneID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("opisJavneLicitacije")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("korakCeneID");

                    b.HasDiscriminator().HasValue("JavnaLicitacijaEntity");

                    b.HasData(
                        new
                        {
                            javnoNadmetanjeID = new Guid("6a411c13-a195-48f7-8dbd-67596c3973c0"),
                            brojUcesnika = 15,
                            datum = new DateTime(2021, 6, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dopunaDepozita = 5000,
                            etapaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5873e968b"),
                            izlicitiranaCena = 205000,
                            izuzeto = false,
                            katastarskaOpstina = "Novi Grad",
                            krug = 1,
                            periodZakupa = 5,
                            pocetnaCena = 55000,
                            status = "Prvi krug",
                            tip = 1,
                            vremeKraja = new DateTime(2021, 6, 11, 13, 59, 0, 0, DateTimeKind.Unspecified),
                            vremePocetka = new DateTime(2021, 6, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            brojJavneLicitacije = 1,
                            korakCeneID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e961b"),
                            opisJavneLicitacije = "Prvi tip javnog nadmetanja"
                        },
                        new
                        {
                            javnoNadmetanjeID = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            brojUcesnika = 25,
                            datum = new DateTime(2021, 6, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            dopunaDepozita = 5000,
                            etapaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e968b"),
                            izlicitiranaCena = 200000,
                            izuzeto = false,
                            katastarskaOpstina = "Novi Grad",
                            krug = 1,
                            periodZakupa = 5,
                            pocetnaCena = 50000,
                            status = "Prvi krug",
                            tip = 1,
                            vremeKraja = new DateTime(2021, 6, 1, 13, 59, 0, 0, DateTimeKind.Unspecified),
                            vremePocetka = new DateTime(2021, 6, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            brojJavneLicitacije = 2,
                            korakCeneID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e938b"),
                            opisJavneLicitacije = "Prvi tip javnog nadmetanja"
                        });
                });

            modelBuilder.Entity("JavnoNadmetanje.Entities.JavnoNadmetanjeEntity", b =>
                {
                    b.HasOne("JavnoNadmetanje.Entities.EtapaEntity", "Etapa")
                        .WithMany()
                        .HasForeignKey("etapaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etapa");
                });

            modelBuilder.Entity("JavnoNadmetanje.Entities.JavnaLicitacijaEntity", b =>
                {
                    b.HasOne("JavnoNadmetanje.Entities.KorakCeneEntity", "KorakCene")
                        .WithMany()
                        .HasForeignKey("korakCeneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorakCene");
                });
#pragma warning restore 612, 618
        }
    }
}
