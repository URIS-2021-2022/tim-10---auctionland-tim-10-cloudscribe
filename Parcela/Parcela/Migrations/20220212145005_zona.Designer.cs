// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parcela.Entities;

namespace Parcela.Migrations
{
    [DbContext(typeof(ParcelaContext))]
    [Migration("20220212145005_zona")]
    partial class zona
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parcela.Entities.DeoParcele.DeoParceleEntity", b =>
                {
                    b.Property<Guid>("DeoParceleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Dodeljena")
                        .HasColumnType("bit");

                    b.Property<Guid>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Povrsina")
                        .HasColumnType("int");

                    b.Property<int>("RedniBroj")
                        .HasColumnType("int");

                    b.HasKey("DeoParceleId");

                    b.HasIndex("ParcelaId");

                    b.ToTable("DeoParceleEntity");

                    b.HasData(
                        new
                        {
                            DeoParceleId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            Dodeljena = false,
                            ParcelaId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            Povrsina = 100,
                            RedniBroj = 1
                        });
                });

            modelBuilder.Entity("Parcela.Entities.KatastarskaOpstina.KatastarskaOpstinaEntity", b =>
                {
                    b.Property<Guid>("KatastarskaOpstinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImeKatastarskeOpstine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KatastarskaOpstinaId");

                    b.ToTable("KatastarskaOpstina");

                    b.HasData(
                        new
                        {
                            KatastarskaOpstinaId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            ImeKatastarskeOpstine = "Mladenburg"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.Parcela.ParcelaEntity", b =>
                {
                    b.Property<Guid>("ParcelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojListaNepokretnosti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojParcele")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KatastarskaOpstina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Klasa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlasaStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KorisnikId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kultura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KulturaStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OBradivostStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OblikSvojine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obradivost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odvodnjavanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdvodnjavanjeStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Povrsina")
                        .HasColumnType("int");

                    b.Property<string>("ZasticenZonaStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZasticenaZona")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParcelaId");

                    b.ToTable("Parcela");

                    b.HasData(
                        new
                        {
                            ParcelaId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            BrojListaNepokretnosti = "BLN",
                            BrojParcele = "1",
                            KatastarskaOpstina = "Indjija",
                            Klasa = "Klasa",
                            KlasaStvarnoStanje = "KSS",
                            KorisnikId = new Guid("6a411c13-a295-48f7-8dbd-67596c3974c0"),
                            Kultura = "K",
                            KulturaStvarnoStanje = "KSS",
                            OBradivostStvarnoStanje = "OSS",
                            OblikSvojine = "OS",
                            Obradivost = "O",
                            Odvodnjavanje = "O",
                            OdvodnjavanjeStvarnoStanje = "OSS",
                            Povrsina = 100,
                            ZasticenZonaStvarnoStanje = "ZZSS",
                            ZasticenaZona = "Z"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.ZasticenaZona.ZasticenaZonaEntity", b =>
                {
                    b.Property<Guid>("ZasticenZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrojZone")
                        .HasColumnType("int");

                    b.HasKey("ZasticenZonaId");

                    b.ToTable("ZasticenaZona");

                    b.HasData(
                        new
                        {
                            ZasticenZonaId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            BrojZone = 1
                        });
                });

            modelBuilder.Entity("Parcela.Entities.DeoParcele.DeoParceleEntity", b =>
                {
                    b.HasOne("Parcela.Entities.Parcela.ParcelaEntity", "Parcela")
                        .WithMany("DeloviParcele")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("Parcela.Entities.Parcela.ParcelaEntity", b =>
                {
                    b.Navigation("DeloviParcele");
                });
#pragma warning restore 612, 618
        }
    }
}
